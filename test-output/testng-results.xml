<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="3" passed="2" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-01-21T23:35:25 IST" name="Suite" finished-at="2024-01-21T23:35:25 IST" duration-ms="64">
    <groups>
    </groups>
    <test started-at="2024-01-21T23:35:25 IST" name="Test" finished-at="2024-01-21T23:35:25 IST" duration-ms="54">
      <class name="test.firstPractice">
        <test-method is-config="true" signature="prerequisites()[pri:0, instance:test.firstPractice@2eae8e6e]" started-at="2024-01-21T23:35:25 IST" name="prerequisites" finished-at="2024-01-21T23:35:25 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prerequisites -->
        <test-method is-config="true" signature="bfmethod()[pri:0, instance:test.firstPractice@2eae8e6e]" started-at="2024-01-21T23:35:25 IST" name="bfmethod" finished-at="2024-01-21T23:35:25 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bfmethod -->
        <test-method signature="secondMethod(java.lang.String)[pri:0, instance:test.firstPractice@2eae8e6e]" started-at="2024-01-21T23:35:25 IST" name="secondMethod" finished-at="2024-01-21T23:35:25 IST" duration-ms="7" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[qaclickacademy.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- secondMethod -->
        <test-method is-config="true" signature="afmethod()[pri:0, instance:test.firstPractice@2eae8e6e]" started-at="2024-01-21T23:35:25 IST" name="afmethod" finished-at="2024-01-21T23:35:25 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afmethod -->
        <test-method is-config="true" signature="lastMethod()[pri:0, instance:test.firstPractice@2eae8e6e]" started-at="2024-01-21T23:35:25 IST" name="lastMethod" finished-at="2024-01-21T23:35:25 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lastMethod -->
      </class> <!-- test.firstPractice -->
    </test> <!-- Test -->
    <test started-at="2024-01-21T23:35:25 IST" name="Practice 1" finished-at="2024-01-21T23:35:25 IST" duration-ms="64">
      <class name="test.firstPractice">
        <test-method is-config="true" signature="bfsuite()[pri:0, instance:test.firstPractice@2eae8e6e]" started-at="2024-01-21T23:35:25 IST" name="bfsuite" finished-at="2024-01-21T23:35:25 IST" duration-ms="11" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bfsuite -->
        <test-method is-config="true" signature="afsuite()[pri:0, instance:test.firstPractice@2eae8e6e]" started-at="2024-01-21T23:35:25 IST" name="afsuite" finished-at="2024-01-21T23:35:25 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afsuite -->
      </class> <!-- test.firstPractice -->
      <class name="test.secondPractice">
        <test-method signature="goodMorning()[pri:0, instance:test.secondPractice@68c9133c]" started-at="2024-01-21T23:35:25 IST" name="goodMorning" finished-at="2024-01-21T23:35:25 IST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goodMorning -->
        <test-method signature="goodNight()[pri:0, instance:test.secondPractice@68c9133c]" started-at="2024-01-21T23:35:25 IST" name="goodNight" finished-at="2024-01-21T23:35:25 IST" depends-on-methods="test.secondPractice.goodMorning" duration-ms="2" status="FAIL">
          <exception class="java.lang.AssertionError">
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError
at test.secondPractice.goodNight(secondPractice.java:24)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:481)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goodNight -->
      </class> <!-- test.secondPractice -->
    </test> <!-- Practice 1 -->
  </suite> <!-- Suite -->
</testng-results>
